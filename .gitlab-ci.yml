#//
#// Copyright (c) Phoenix Contact GmbH & Co. KG. All rights reserved.
#// Licensed under the MIT. See LICENSE file in the project root for full license information.
#// SPDX-License-Identifier: MIT
#//
stages:
 - prepare
 - PLCnextBuild
 - PLCnextBuildLibrary
 - PLCnextBuildAll
 - deploy


## Docker Image:
# PLCNCLI
# C/C++ SDK
# PLCNEngineer Library Builder
# CMAKE
image: $SDK_IMAGE

variables:
  SDK_PATH: "${SDKPATH}"
  TARGET_VERSION: "${TARGETVERSION}"
  TARGET_NAME: "${TARGETNAME}"

.RunnerRequirements:
 before_script:
  - chmod +x tools/*
  - which cmake
  - cmake --version
  - which make
  - make --version
  - which plcncli
  - plcncli --version
  - plcncli get sdks
  - plcncli get targets
  - apt-get update
  - apt-get install ninja-build
  - echo "SDK_PATH:${SDK_PATH}"
  - echo "TARGET_VERSION:${TARGET_VERSION}"
  - echo "TARGET_NAME:${TARGET_NAME}"
 tags:
  - docker
  - debian-based
 allow_failure: false

PreperationJson:
 stage: prepare
 extends: .RunnerRequirements
 script:
  - tools/prepare-json.sh
 cache:
  key: prepareJson
  paths:
    - external/json

PreperationJsonValidation:
 stage: prepare
 extends: .RunnerRequirements
 script:
  - tools/prepare-valijson.sh
 cache:
  key: prepareValiJson
  paths:
    - external/valijson

PrepareMqttClient:
 stage: prepare
 extends: .RunnerRequirements
 script:
  - tools/prepare-mqtt-client.sh
 cache:
  key: prepareMqttClient
  paths:
    - external/mqttclient
  #################################################
#################################################
#################################################
######PLCnext Building###########################
BuildJson:
 stage: PLCnextBuild
 extends: .RunnerRequirements
 dependencies:
  - PreperationJson
 script:
  - tools/build-json.sh -t ${SDK_PATH} -a ${TARGET_VERSION} -n ${TARGET_NAME}
 cache:
  key: prepareJson
  paths:
  - external/
 artifacts:
  expire_in: 10 min
  paths:
  - external/deploy

BuildValiJson:
 stage: PLCnextBuild
 extends: .RunnerRequirements
 dependencies:
  - PreperationJsonValidation
 script:
  - tools/build-valijson.sh -t ${SDK_PATH} -a ${TARGET_VERSION} -n ${TARGET_NAME}
 cache:
  key: prepareValiJson
  paths:
  - external/
 artifacts:
  expire_in: 10 min
  paths:
  - external/deploy

BuildMqttClient:
 stage: PLCnextBuild
 extends: .RunnerRequirements
 dependencies:
  - PrepareMqttClient
 script:
  - tools/build-mqtt-client.sh -t ${SDK_PATH} -a ${TARGET_VERSION} -n ${TARGET_NAME}
 cache:
  key: prepareMqttClient
  paths:
  - external/
 artifacts:
  expire_in: 10 min
  paths:
  - external/deploy

BuildComponent:
 stage: PLCnextBuildLibrary
 extends: .RunnerRequirements
 dependencies:
  - BuildJson
 script:
  - tools/build-component.sh -t ${SDK_PATH} -a ${TARGET_VERSION} -n ${TARGET_NAME}
 artifacts:
  name: "$CI_COMMIT_REF_SLUG"
  when: always
  expire_in: 1 hour
  paths:
   - bin/
   - build/
   - external/deploy

BuildAll:
 stage: PLCnextBuildAll
 extends: .RunnerRequirements
 script:
  - tools/build-automatic-all.sh
 artifacts:
  name: "$CI_COMMIT_REF_SLUG"
  when: on_success
  paths:
   - deploy
